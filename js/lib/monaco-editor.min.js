/* Monaco Editor placeholder */
(function() {
  window.monaco = {
    editor: {
      create: function(container, options) {
        console.log('Monaco editor initialized with options:', options);
        const editorDiv = document.createElement('div');
        editorDiv.style.width = '100%';
        editorDiv.style.height = '100%';
        editorDiv.style.backgroundColor = '#1e1e1e';
        editorDiv.style.color = '#d4d4d4';
        editorDiv.style.fontFamily = 'monospace';
        editorDiv.style.padding = '10px';
        editorDiv.style.overflow = 'auto';
        editorDiv.contentEditable = true;
        editorDiv.textContent = options.value || '';
        
        container.appendChild(editorDiv);
        
        return {
          getValue: function() {
            return editorDiv.textContent || '';
          },
          setValue: function(value) {
            editorDiv.textContent = value || '';
          },
          onDidChangeModelContent: function(callback) {
            editorDiv.addEventListener('input', callback);
            return { dispose: function() {} };
          },
          layout: function() {},
          focus: function() { editorDiv.focus(); }
        };
      }
    }
  };
})();
